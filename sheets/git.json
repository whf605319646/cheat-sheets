{
  "title": "Git Cheat Sheet",
  "repo": "//github.com/whf605319646/cheat-sheets",
  "url": "//www.hfwang.win/cheat-sheets/git",
  "doc": "//github.com/whf605319646/cheat-sheets/blob/master/docs/git.md",
  "collections": [
    {
      "title": "初始化仓库",
      "commands": [
        {
          "title": "初始化仓库",
          "command": "git init"
        },
        {
          "title": "初始化裸仓库",
          "command": "git init --bare"
        },
        {
          "title": "克隆仓库",
          "command": "git clone <git-repo>"
        }
      ]
    },
    {
      "title": "配置",
      "commands": [
        {
          "title": "编辑配置文件",
          "command": "git config [--global] -e"
        },
        {
          "title": "列出配置信息",
          "command": "git config -l"
        },
        {
          "title": "获取相应的配置",
          "command": "git config --get core.editor"
        },
        {
          "title": "配置用户邮箱",
          "command": "git config --global user.email <mail>"
        },
        {
          "title": "配置用户名",
          "command": "git config --global user.name <name>"
        },
        {
          "title": "输出彩色信息",
          "command": "git config color.ui true"
        },
        {
          "title": "设置文件名大小写敏感",
          "command": "git config core.ignoreCase false"
        },
        {
          "title": "设置推送策略为 simple",
          "command": "git config push.default simple"
        },
        {
          "title": "设置 git 的编辑器是 vim",
          "command": "git config --global core.editor vim"
        },
        {
          "title": "设置命令别名",
          "command": "git config --global alias.co checkout"
        }
      ]
    },
    {
      "title": "忽略文件",
      "commands": [
        {
          "title": "添加本项目的忽略文件",
          "command": "vim .gitignore"
        },
        {
          "title": "添加本项目的忽略文件并不把此文件纳入版本管理",
          "command": "vim .git/info/exclude"
        },
        {
          "title": "设置全局忽略文件",
          "command": "git config --global core.excludesfile ~/.gitignore"
        },
        {
          "title": "对已加入版本管理的文件不做更改检查",
          "command": "git update-index --assume-unchanged <file>"
        },
        {
          "title": "对已加入版本管理的文件做更改检查",
          "command": "git update-index --no-assume-unchanged <file>"
        }
      ]
    },
    {
      "title": "添加删除移动文件",
      "commands": [
        {
          "title": "添加所有文件到暂存区，包括未追踪文件",
          "command": "git add -A"
        },
        {
          "title": "更新暂存区文件",
          "command": "git add -u"
        },
        {
          "title": "交互式添加文件到暂存区",
          "command": "git add -p"
        },
        {
          "title": "工作区与暂存区删除文件",
          "command": "git rm <file>"
        },
        {
          "title": "仅暂存区删除文件",
          "command": "git rm --cached <file>"
        },
        {
          "title": "重命名暂存区文件",
          "command": "git mv <file> <file1>"
        }
      ]
    },
    {
      "title": "工作区状态",
      "commands": [
        {
          "title": "查看工作区的信息",
          "command": "git status"
        },
        {
          "title": "查看工作区信息并显示分支及追踪信息",
          "command": "git status -sb"
        },
        {
          "title": "并查看忽略文件的信息",
          "command": "git status --ignored"
        },
        {
          "title": "列出忽略文件",
          "command": "git check-ignore *"
        }
      ]
    },
    {
      "title": "显示更改",
      "commands": [
        {
          "title": "显示工作区与暂存区的不同",
          "command": "git diff"
        },
        {
          "title": "显示暂存区与本地仓库的不同",
          "command": "git diff --cached"
        },
        {
          "title": "显示工作区，暂存区与本地仓库的不同",
          "command": "git diff HEAD"
        },
        {
          "title": "仅显示改变的文件",
          "command": "git diff --name-only"
        },
        {
          "title": "比较两次提交的差异",
          "command": "git diff <commit> <commit>"
        },
        {
          "title": "显示某次 commit 所做的更改",
          "command": "git show <commit>"
        }
      ]
    },
    {
      "title": "列出文件信息",
      "commands": [
        {
          "title": "列出暂存区文件",
          "command": "git ls-files"
        },
        {
          "title": "列出忽略文件与未追踪文件",
          "command": "git ls-files -o"
        },
        {
          "title": "子目录中显示所在位置",
          "command": "git ls-files --full-name"
        }
      ]
    },
    {
      "title": "储藏与恢复",
      "commands": [
        {
          "title": "储藏(stash)工作区相对暂存区更改的文件",
          "command": "git stash"
        },
        {
          "title": "储藏文件并添加描述信息",
          "command": "git stash save <message>"
        },
        {
          "title": "恢复最后一次储藏的文件",
          "command": "git stash apply"
        },
        {
          "title": "恢复最后一次储藏的文件并删除此次储存记录",
          "command": "git stash pop"
        },
        {
          "title": "查看储藏列表",
          "command": "git stash list"
        }
      ]
    },
    {
      "title": "恢复工作区",
      "commands": [
        {
          "title": "重置工作区某文件",
          "command": "git checkout -- <file>"
        },
        {
          "title": "重置工作区",
          "command": "git checkout ."
        },
        {
          "title": "列出将要清除的未追踪文件",
          "command": "git clean -n"
        },
        {
          "title": "清除未追踪文件",
          "command": "git clean -f"
        },
        {
          "title": "清除忽略文件",
          "command": "git clean -Xf"
        },
        {
          "title": "清除未追踪目录及文件",
          "command": "git clean -df"
        }
      ]
    },
    {
      "title": "回退版本",
      "commands": [
        {
          "title": "重置暂存区",
          "command": "git reset"
        },
        {
          "title": "重置工作区和暂存区",
          "command": "git reset --hard",
          "alternatives": [
            "git reset && git checkout . && git clean -df"
          ]
        },
        {
          "title": "恢复本分支到某次提交，重置工作区与暂存区",
          "command": "git reset --hard <commit-ish>"
        },
        {
          "title": "恢复本分支到某次提交",
          "command": "git reset --soft <commit-ish>"
        },
        {
          "title": "恢复本分支到某次提交，重置暂存区",
          "command": "git reset --mixed <commit-ish>"
        },
        {
          "title": "反向恢复一个提交并生成新的提交",
          "command": "git revert <commit>"
        }
      ]
    },
    {
      "title": "分支",
      "commands": [
        {
          "title": "列出本地分支",
          "command": "git branch",
          "alternatives": [
            "git branch -l"
          ]
        },
        {
          "title": "列出本地分支与追踪关系",
          "command": "git branch -vv"
        },
        {
          "title": "列出远程分支",
          "command": "git branch -r"
        },
        {
          "title": "列出所有分支",
          "command": "git branch -a"
        },
        {
          "title": "建立分支不切换工作区",
          "command": "git branch <branch>"
        },
        {
          "title": "删除已被合并的分支",
          "command": "git branch -d <branch>"
        },
        {
          "title": "强制删除未被合并的分支",
          "command": "git branch -D <branch>",
          "alternatives": [
            "git branch --delete --force <branch>"
          ]
        },
        {
          "title": "更改分支名字",
          "command": "git branch -m <newbranch>"
        },
        {
          "title": "设置追踪分支",
          "command": "git branch -u <upstream>"
        }
      ]
    },
    {
      "title": "切换分支",
      "commands": [
        {
          "title": "切换分支",
          "command": "git checkout <branch>"
        },
        {
          "title": "建立分支并切换工作区",
          "command": "git checkout -b <branch>"
        },
        {
          "title": "切换到最近一次分支",
          "command": "git checkout -"
        },
        {
          "title": "建立无任何提交历史的分支",
          "command": "git checkout --orphan <branch>"
        }
      ]
    },
    {
      "title": "合并分支",
      "commands": [
        {
          "title": "合并 develop 分支到本分支",
          "command": "git merge develop"
        },
        {
          "title": "强制合并分支后生成 merge commit",
          "command": "git merge -no-ff develop"
        },
        {
          "title": "合并最近切换分支",
          "command": "git merge -"
        },
        {
          "title": "变基合并 develop 分支",
          "command": "git rebase develop"
        },
        {
          "title": "变基进入交互式界面",
          "command": "git rebase -i"
        }
      ]
    },
    {
      "title": "远程仓库",
      "commands": [
        {
          "title": "添加远程仓库并命名为 origin",
          "command": "git remote add origin <git-repo>"
        },
        {
          "title": "修改远程仓库的地址",
          "command": "git remote set-url origin <git-repo>"
        },
        {
          "title": "列出所有的远程仓库",
          "command": "git remote -v"
        },
        {
          "title": "列出远程仓库 origin 的详细信息",
          "command": "git remote show origin"
        }
      ]
    },
    {
      "title": "推送与拉取",
      "commands": [
        {
          "title": "git config push.default simple",
          "command": "设置默认推送策略为 simple"
        },
        {
          "title": "推送 master 到远程仓库",
          "command": "git push origin master"
        },
        {
          "title": "推送到远程仓库并建立追踪关系",
          "command": "git push -u origin master"
        },
        {
          "title": "推送时忽略 pre-push hook",
          "command": "git push -n"
        },
        {
          "title": "从远程仓库拉取文件",
          "command": "git pull origin master"
        },
        {
          "title": "设置 rebase 模式拉取代码",
          "command": "git pull --rebase origin master"
        }
      ]
    },
    {
      "title": "提交",
      "commands": [
        {
          "title": "提交",
          "command": "git commit -m <message>"
        },
        {
          "title": "追加提交重置提交信息",
          "command": "git commit --amend -m <message>"
        },
        {
          "title": "重置作者",
          "command": "git commit --amend --author=<mail> "
        },
        {
          "title": "允许空提交",
          "command": "git commit --allow-empty"
        },
        {
          "title": "提交时跳过 pre-commit hook",
          "command": "git commit -n"
        }
      ]
    },
    {
      "title": "日志",
      "commands": [
        {
          "title": "显示提交日志",
          "command": "git log"
        },
        {
          "title": "显示某文件的提交日志",
          "command": "git log -p <file>"
        },
        {
          "title": "以图表形式显示提交日志",
          "command": "git log --graph --all --oneline --decorate"
        },
        {
          "title": "显示每次提交的对象信息",
          "command": "git log --pretty=raw"
        },
        {
          "title": "显示某个时间段的提交信息",
          "command": "git log --since '2 days ago'"
        },
        {
          "title": "显示指定作者的提交信息",
          "command": "git log --author=<author>"
        },
        {
          "title": "根据提交信息中的关键字查找",
          "command": "git log --grep=<keyword>"
        },
        {
          "title": "根据提交源码中的关键字查找",
          "command": "git log -S <keyword>"
        },
        {
          "title": "列出二者特有的提交",
          "command": "git log master...develop"
        },
        {
          "title": "列出 branch 有而 branch2 没有的提交",
          "command": "git log branch2..branch",
          "alternatives": [
            "git log branch ^branch2",
            "git log branch --not branch2"
          ]
        },
        {
          "title": "仅显示 merge commit",
          "command": "git log --merges"
        },
        {
          "title": "统计每个作者的提交情况",
          "command": "git shortlog"
        },
        {
          "title": "统计每个作者的提交个数",
          "command": "git shortlog -sn"
        }
      ]
    },
    {
      "title": "标签",
      "commands": [
        {
          "title": "列出所有标签并显示标签信息",
          "command": "git tag -ln"
        },
        {
          "title": "添加一个标签",
          "command": "git tag -a v1.0.0 -m <message>"
        },
        {
          "title": "在某个 commit 上添加一个标签",
          "command": "git tag v0.9.0 <commit>"
        },
        {
          "title": "删除一个标签",
          "command": "git tag -d v1.0.0"
        },
        {
          "title": "查看某个标签信息",
          "command": "git show v1.0.0"
        },
        {
          "title": "推送所有标签到远程仓库",
          "command": "git push --tags"
        },
        {
          "title": "使用最近的标签描述本次提交",
          "command": "git describe"
        }
      ]
    },
    {
      "title": "追责（甩锅）",
      "commands": [
        {
          "title": "找到最后一次提交的作者",
          "command": "git blame <file>"
        },
        {
          "title": "找到具体某一段的最后一次提交",
          "command": "git blame -L 10,18 <file>"
        },
        {
          "title": "查找文件的修改历史及明细",
          "command": "git log -p <file>"
        }
      ]
    },
    {
      "title": "确认坏的提交",
      "commands": [
        {
          "title": "二分查找坏的提交",
          "command": "git bisect start <br> git checkout HEAD~20 <br> git bisect good <br> git bisect bad <br> git bisect reset"
        }
      ]
    },
    {
      "title": "git 对象",
      "commands": [
        {
          "title": "获取改摘要信息的类型",
          "command": "git cat-file -t <hash>"
        },
        {
          "title": "获取改摘要信息的内容",
          "command": "git cat-file -p <hash>"
        }
      ]
    },
    {
      "title": "查找",
      "commands": [
        {
          "title": "在已追踪文件中查找关键字并指明行号",
          "command": "git grep -n hello"
        }
      ]
    },
    {
      "title": "打包",
      "commands": [
        {
          "title": "打包",
          "command": "git archive -o arch.zip HEAD"
        }
      ]
    }
  ]
}
